drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date);
INSERT INTO  goldusers_signup(userid,gold_signup_date) Values(1,'09-22-2017'),(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signupdate date);

INSERT INTO users(userid,signupdate) VALUES(1,'09-02-2014'),(2,'01-15-2015'),(3,'04-11-2014');



drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer);

INSERT INTO 
sales(userid,created_date,product_id)
VALUES(1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer);
INSERT INTO product(product_id,product_name,price) VALUES(1,'p1',980),(2,'p2',870),(3,'p3',330);

select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;

----1)what is total amount each customer spent on zomato?
SELECT s.userid,SUM(p.price) AS total_amt_spent
FROM sales s
INNER JOIN product p
ON s.product_id=p.product_id
group by s.userid;

----2)How many days has each customer visited zomato?
SELECT userid,COUNT(distinct created_date) AS distinct_days
FROM sales
GROUP BY userid;


----3)what was the first product purchased by each customer?
select * from
(select*,rank()OVER(PARTITION BY userid ORDER BY created_date)AS rnk FROM sales) AS a
where rnk=1;


----4)what is most purchased item on menu & how many times was it purchased by all customers ?

select userid,product_id,count(product_id) AS how_many_times from sales where product_id =
(select top 1 product_id from sales group by product_id order by count(product_id) desc)
group by userid,product_id;

----5)which item was most popular for each customer?
select * from
(select *,rank()OVER(PARTITION BY userid ORDER BY cnt desc) as rnk  from 
(SELECT userid,product_id,count(product_id) AS cnt from sales group by userid,product_id)as a)as b
where rnk=1


----6)which item was purchased first by customer after they become a member ?

WITH CTE AS
(select a.userid,a.created_date,a.product_id,b.gold_signup_date,RANK()over(partition by a.userid order by a.created_date )AS rnk
from sales a inner join goldusers_signup b on a.userid=b.userid and a.created_date>=b.gold_signup_date)
select *
from CTE
WHERE rnk=1;


----7)which item was purchased just before customer became a member?
WITH CTE AS
(select a.userid,a.created_date,a.product_id,b.gold_signup_date,RANK()over(partition by a.userid order by a.created_date DESC)AS rnk
from sales a inner join goldusers_signup b on a.userid=b.userid and a.created_date<=b.gold_signup_date)
select *
from CTE
WHERE rnk=1;

-----8)what is total orders and amount spent for each member before they become a member ?
with cte as
(select a.userid,a.created_date,a.product_id,b.gold_signup_date,d.price
from sales a inner join goldusers_signup b on a.userid=b.userid and a.created_date<=b.gold_signup_date
inner join product d on a.product_id=d.product_id)
select userid,count(created_date)as order_purchased,sum(price) as total_amt_spent
from cte
group by userid;

----9)rnk all transaction of the customers
select*,rank()over(partition by userid order by created_date ) rnk from sales;

----10)rank all transaction for each member whenever they are zomato gold member for every non gold member transaction mark as na
with cte AS
(select a.userid,a.created_date,a.product_id,b.gold_signup_date,CASE WHEN b.gold_signup_date IS NULL then 0 ELSE rank()over(partition by a.userid order by a.created_date desc ) END AS rnk
FROM sales a LEFT JOIN goldusers_signup b on a.userid=b.userid and a.created_date>=b.gold_signup_date)
select *,case when rnk=0 then 'na' ELSE CAST(rnk AS varchar) END AS rnkk
FROM cte;
